name: Merge

on:
  push:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}.${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE: ghcr.io/worth-nl/notifynl-api

jobs:
  build-and-tag:
    runs-on: ubuntu-latest

    permissions:
      packages: write

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Europe/Amsterdam"

      - uses: actions/checkout@v4

      - uses: gerlero/apt-install@v1
        with:
          packages: build-essential git libcurl4-openssl-dev curl libssl-dev
          install-recommends: false

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          enable-cache: true
          cache-dependency-glob: |
            requirements_for_test.in
            requirements_for_test.txt
            requirements_nl_test.txt

      - name: Install application requirements (pip)
        run: uv sync

      - name: Build
        run: uv build

      - name: Set tag
        run: echo "TAG=$(date +%Y%m%d).${{ github.run_number }}" >> $GITHUB_ENV
        id: set-tag

      - uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v3
        name: Setup QEMU

      - uses: docker/setup-buildx-action@v3
        name: Setup buildx

      - name: Docker build and push ${{ env.TAG }}
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          load: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Test container
        run: docker run --rm ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Docker build and export ${{ env.TAG }} for test
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          push: true
          tags: ${{ env.IMAGE }}:latest,${{ env.IMAGE }}:${{ env.TAG }}

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          make_latest: true
          token: ${{ secrets.RELEASE_TOKEN }}
          generate_release_notes: true
